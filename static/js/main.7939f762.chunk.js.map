{"version":3,"sources":["components/Button.jsx","components/Input.jsx","components/ClearButton.jsx","App.js","index.js"],"names":["Button","props","className","val","children","isNaN","onClick","handleClick","Input","input","ClearButton","handleClear","App","addToInput","setState","state","handleEqual","math","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAOaA,G,YAAS,SAAAC,GAAK,OACvB,qBAAKC,UAAS,0BALCC,EAMAF,EAAMG,SALbC,MAAMF,IAAgB,MAARA,GAAuB,MAARA,EAKG,WAAP,OAC7BG,QAAS,kBAAML,EAAMM,YAAYN,EAAMG,WAF3C,SAIKH,EAAMG,WATI,IAAAD,ICANK,G,MAAQ,SAAAP,GAAK,OAAI,qBAAKC,UAAU,QAAf,SAAwBD,EAAMQ,UCA/CC,G,MAAc,SAACT,GAAD,OAC3B,qBAAKC,UAAU,YAAYI,QAASL,EAAMU,YAA1C,SAAwDV,EAAMG,a,QC2D/CQ,EAxDf,kDACE,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IAORY,WAAa,SAAAV,GACX,EAAKW,SAAS,CAACL,MAAO,EAAKM,MAAMN,MAAQN,KATxB,EAYnBa,YAAc,WACZ,EAAKF,SAAS,CAACL,MAAOQ,IAAc,EAAKF,MAAMN,UAV/C,EAAKM,MAAQ,CACXN,MAAO,IAJQ,EADrB,qDAiBY,IAAD,OACP,OACE,qBAAKP,UAAU,MAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAOO,MAAOS,KAAKH,MAAMN,QACzB,uBACA,sBAAKP,UAAU,MAAf,UACE,cAAC,EAAD,CAAQK,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,kBAEF,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAQK,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,kBAEF,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAQK,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,kBAEF,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAQK,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKF,YAA1B,eACA,cAAC,EAAD,CAAQT,YAAaW,KAAKL,WAA1B,kBAEF,qBAAKX,UAAU,MAAf,SACE,cAAC,EAAD,CAAaS,YAAa,kBAAM,EAAKG,SAAS,CAACL,MAAO,MAAtD,8BAhDZ,GAAyBU,aCFzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7939f762.chunk.js","sourcesContent":["import React from 'react';\nimport './Button.css';\n\nconst isOperator = val => {\n    return !isNaN(val) || val === \".\" || val === \"=\";\n}\n\nexport const Button = props => (\n    <div className={`button-wrapper ${\n        isOperator(props.children) ? null : \"operator\"\n    }`} onClick={() => props.handleClick(props.children)}\n    >\n        {props.children}\n    </div>\n)\n\nexport default Button;\n","import React from 'react';\nimport './Input.css';\n\nexport const Input = props => <div className=\"input\">{props.input}</div>;\n","import React from 'react';\nimport './ClearButton.css';\n\nexport const ClearButton = (props) => (\n<div className=\"clear-btn\" onClick={props.handleClear}>{props.children}</div>\n);","import React, { Component } from 'react'\nimport './App.css';\nimport {Button} from \"./components/Button\";\nimport {Input} from \"./components/Input\";\nimport {ClearButton} from './components/ClearButton';\nimport * as math from 'mathjs';\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: \"\"\n    }; \n  }\n\n  addToInput = val => {\n    this.setState({input: this.state.input + val});\n  };\n\n  handleEqual = () => {\n    this.setState({input: math.evaluate(this.state.input)});\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"calc-wrapper\" >\n          <Input input={this.state.input}></Input>\n          <hr></hr>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>7</Button>\n            <Button handleClick={this.addToInput}>8</Button>\n            <Button handleClick={this.addToInput}>9</Button>\n            <Button handleClick={this.addToInput}>/</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>4</Button>\n            <Button handleClick={this.addToInput}>5</Button>\n            <Button handleClick={this.addToInput}>6</Button>\n            <Button handleClick={this.addToInput}>*</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>1</Button>\n            <Button handleClick={this.addToInput}>2</Button>\n            <Button handleClick={this.addToInput}>3</Button>\n            <Button handleClick={this.addToInput}>+</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>.</Button>\n            <Button handleClick={this.addToInput}>0</Button>\n            <Button handleClick={this.handleEqual}>=</Button>\n            <Button handleClick={this.addToInput}>-</Button>\n          </div>\n          <div className=\"row\">\n            <ClearButton handleClear={() => this.setState({input: \"\"})}>CLEAR</ClearButton>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}